- [x] 1. initial commit
- [x] 2. initial install, link to deployment
- [x] any: add prettier
    I wanted it before I started saving w semicolons and spaces
    - .vscode/settings.json
    - prettier.config.cjs (matching the other preset config files)
- [x] 3. supabase client, cli, types, env
  - [x] any: tsconfig, aliases
- [x] 3. add home page (and dependent assets)
    - and tailwind-merge and clsx
    - images, favicon
    - some app config
- [x] 4. add layout / flex / css / tailwind / daisy
- [x] 4. add login route, auth layout, auth page stubs
- [x] 4. set up tailwind, daisy, base layout, theme
- [x] 5. add routes for `/profile`, `/learn`, `/learn/[lang]`
    - and getting-started and /learn/new-language
    - and layouts for single-form, auth guard, and app width
- [x] 5. add sidebar with state / static menu


- [ ] any: eslint(?)
- [ ] any: husky pre-commit -- actually defer this till we slow down
- [x] any: tauri build (not perfect but launches apple desktop app)
- [ ] any: tauri iOS
- [ ] any: add 404 and 500 pages


- [x] 1. add supabase client, make the login work
    - add form handler Felte -- @@TODO review this decision?? kind of big...
- [x] 1. add tanstack query, provider
    - and add useProfile in the sidebar
    - and refetch upon login (but not (yet) with the authstate change listener)
- [ ] 2. add profileQuery, and load `/learn` page
- [x] 2. add signout and deck menu to sidebar
- [ ] 3. add auth state change listener, invalidate queries
- [ ] 3. auth store/context/hook, protect user queries from loading empty data
- [ ] 4. add deck detail page, language queries and deck queries
- [ ] 4. preload the app data high up in the route tree

- [ ] any: add toast for login logout
- [ ] any: add Error and Loading states (consider suspense query?)
    - https://docs.solidjs.com/concepts/control-flow/error-boundary
- [ ] any: make login signout into mutations
- [ ] any: replace react-modal
- [ ] any: replace react-select

- [ ] 1. add new deck
- [ ] 1. add translation
- [ ] 2. add phrase with translation
- [ ] 2. add card
- [ ] 2. add card-phrase-translations
- [ ] 2. add phrase relations
- [ ] 3. add reviews interface
- [ ] 4. add profile / update
- [ ] 4. add getting-started
- [ ] 4. add auth screens (password reset etc)

?? Send back to the other app(s) ??
1. use a map for the languages. it's more type-appropriate and since it's loaded in memory app-wide
    it doesn't matter
1. use mapped object for decksMap on the Profile as well (it doesn't change enough to matter
    whether this non-serializable object can benefit from the react-query optimizations
1. research whether solid-query can maintain structural-sharing with Maps and Sets (consider using
    for the CardsMap and PhrasesMap ðŸ¤·)
